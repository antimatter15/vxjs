<h1>vX Tests/Demos</h1>

<h2>Ajax</h2>
<a href="javascript:void(0)" id="ajax">Click here</a> to find out the size of the vX Javascript Library using vX Ajax.<br>
<span>Size: </span><span id="vxs">Why dont you try finding out?</span>

<h2>JSON</h2>
<a href="javascript:void(0)" id="urlencode">Click here</a> to see urlencoded json.<br>
<a href="javascript:void(0)" id="stringify">Click here</a> to see stringified json.<br>

<h2>Events</h2>
<a href="javascript:void(0)" id="events">Click here</a> to test if events work.<br>
<a href="javascript:void(0)" id="remevents">Click here</a> to remove above link's handler.<br>


<h2>Animation</h2>
<a href="javascript:void(0)" id="fadeout">Click here</a> to fade out the following block.<br>
<a href="javascript:void(0)" id="fadein">Click here</a> to fade in the following block.<br>
<a href="javascript:void(0)" id="customcolor">Click here</a> to animate background-color in the following block.<br>
<a href="javascript:void(0)" id="customheight">Click here</a> to animate height in the following block.<br>
<a href="javascript:void(0)" id="chain">Click here</a> to animate lots of crap.<br>
<br>
<div id="fx" style="width: 200px; height: 100px; background-color: rgb(0, 255, 0)"></div>



<script type="text/javascript" src="lib/vx.js"></script>

<script type="text/javascript">
function $(e){return document.getElementById(e)}

vE($("ajax"), "click", function(){
  $("vxs").innerHTML = "Checking...";
  //you understand I could just do one request to vx.js and get that size. but I dont feel like it.
  var count = 0;
  var files = ["ajax.js","event.js","anim.js","urlencode.js","fade.js","stringify.js"];
  var done = 0;
  
  for(var i = 0; i < files.length; i++){
    vX("lib/"+files[i],function(e){
      count+=e.length;
      done++;
      $("vxs").innerHTML = "Checking... "+done+"/"+files.length+"...";
      if(done >= files.length){
        $("vxs").innerHTML = (count/1000)+"kb";
      }
    })
  }
  return false
})

vE($("fadein"), "click", function(){
  vF("in", $("fx"))
})

vE($("fadeout"), "click", function(){
  vF("out", $("fx"))
})

vE($("customcolor"), "click", function(){
  vA($("fx"),"backgroundColor",0,255,"rgb(",", 255, 0)", 30, 50)
})

vE($("customheight"), "click", function(){
  vA($("fx"),"height",100,50,"","px", 20, 50)
})

vE($("chain"), "click", function(){
  vA($("fx"),"backgroundColor",0,255,"rgb(0, 255, ",")", 30, 50, function(){
    vF("out", $("fx"))
    vA($("fx"),"backgroundColor",255,0,"rgb(0, 255, ",")", 35, 50, function(){
      vF("in", $("fx"))
      vA($("fx"),"height",100,50,"","px", 20, 50, function(){
        vA($("fx"),"width",200,50,"","px", 20, 50, function(){
        
          vA($("fx"),"height",50,200,"","px", 20, 50)
          vA($("fx"),"width",50,200,"","px", 20, 50)
          
        })
      })
    })
  })
})

vE($("urlencode"), "click", function(){
  alert(vU({
    you: "suck",
    howmuch: "alot"
  }))
})

vE($("stringify"), "click", function(){
  alert(vS({
    hello: "world!",
    recurse:
      {
        awesome: "true"
      }
  }))
})



var handler = function(){
  alert("You see this because events are working")
}

vE($('events'), "click", handler);
vE($("remevents"), "click", function(){ //on event
  alert("Hai! Me Removings Events!");
  vE($('events'), "click", handler, true); //..remove event
})

</script>
